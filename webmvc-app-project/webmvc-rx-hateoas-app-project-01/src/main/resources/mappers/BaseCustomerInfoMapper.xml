<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuan.boot.app.mvc.mapper.BaseCustomerInfoMapper">
  <resultMap id="BaseResultMap" type="org.yuan.boot.app.mvc.pojo.BaseCustomerInfo">
    <!--@mbg.generated-->
    <!--@Table base_customer_info-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="identification_number" jdbcType="VARCHAR" property="identificationNumber" />
    <result column="mailing_address" jdbcType="VARCHAR" property="mailingAddress" />
    <result column="contact_number" jdbcType="VARCHAR" property="contactNumber" />
    <result column="work_place" jdbcType="VARCHAR" property="workPlace" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="udpate_time" jdbcType="TIMESTAMP" property="udpateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, age, identification_number, mailing_address, contact_number, work_place, 
    create_user, update_user, create_time, udpate_time
  </sql>
  <select id="selectByExample" parameterType="org.yuan.boot.app.mvc.pojo.example.BaseCustomerInfoExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_customer_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from base_customer_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from base_customer_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.yuan.boot.app.mvc.pojo.example.BaseCustomerInfoExample">
    <!--@mbg.generated-->
    delete from base_customer_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.yuan.boot.app.mvc.pojo.BaseCustomerInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into base_customer_info (`name`, age, identification_number, 
      mailing_address, contact_number, work_place, 
      create_user, update_user, create_time, 
      udpate_time)
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{identificationNumber,jdbcType=VARCHAR}, 
      #{mailingAddress,jdbcType=VARCHAR}, #{contactNumber,jdbcType=VARCHAR}, #{workPlace,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{udpateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.yuan.boot.app.mvc.pojo.BaseCustomerInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into base_customer_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="identificationNumber != null">
        identification_number,
      </if>
      <if test="mailingAddress != null">
        mailing_address,
      </if>
      <if test="contactNumber != null">
        contact_number,
      </if>
      <if test="workPlace != null">
        work_place,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="udpateTime != null">
        udpate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="identificationNumber != null">
        #{identificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="mailingAddress != null">
        #{mailingAddress,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        #{contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="workPlace != null">
        #{workPlace,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="udpateTime != null">
        #{udpateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yuan.boot.app.mvc.pojo.example.BaseCustomerInfoExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from base_customer_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update base_customer_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.identificationNumber != null">
        identification_number = #{record.identificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.mailingAddress != null">
        mailing_address = #{record.mailingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.contactNumber != null">
        contact_number = #{record.contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.workPlace != null">
        work_place = #{record.workPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.udpateTime != null">
        udpate_time = #{record.udpateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update base_customer_info
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      identification_number = #{record.identificationNumber,jdbcType=VARCHAR},
      mailing_address = #{record.mailingAddress,jdbcType=VARCHAR},
      contact_number = #{record.contactNumber,jdbcType=VARCHAR},
      work_place = #{record.workPlace,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      udpate_time = #{record.udpateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yuan.boot.app.mvc.pojo.BaseCustomerInfo">
    <!--@mbg.generated-->
    update base_customer_info
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="identificationNumber != null">
        identification_number = #{identificationNumber,jdbcType=VARCHAR},
      </if>
      <if test="mailingAddress != null">
        mailing_address = #{mailingAddress,jdbcType=VARCHAR},
      </if>
      <if test="contactNumber != null">
        contact_number = #{contactNumber,jdbcType=VARCHAR},
      </if>
      <if test="workPlace != null">
        work_place = #{workPlace,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="udpateTime != null">
        udpate_time = #{udpateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yuan.boot.app.mvc.pojo.BaseCustomerInfo">
    <!--@mbg.generated-->
    update base_customer_info
    set `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      identification_number = #{identificationNumber,jdbcType=VARCHAR},
      mailing_address = #{mailingAddress,jdbcType=VARCHAR},
      contact_number = #{contactNumber,jdbcType=VARCHAR},
      work_place = #{workPlace,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      udpate_time = #{udpateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>